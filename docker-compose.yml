version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: cybershield-db
    environment:
      POSTGRES_DB: cybershield
      POSTGRES_USER: cybershield
      POSTGRES_PASSWORD: cybershield_secure_2024
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - cybershield-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cybershield -d cybershield"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache (for session management and caching)
  redis:
    image: redis:7-alpine
    container_name: cybershield-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - cybershield-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # CyberShield AI Platform
  cybershield-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cybershield-app
    environment:
      - DATABASE_URL=postgresql://cybershield:cybershield_secure_2024@postgres:5432/cybershield?sslmode=prefer
      - REDIS_URL=redis://redis:6379/0
      - STREAMLIT_SERVER_PORT=5000
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
      - PYTHONPATH=/app
      - ENVIRONMENT=production
    ports:
      - "5000:5000"
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    networks:
      - cybershield-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # NGINX Reverse Proxy (for production deployment)
  nginx:
    image: nginx:alpine
    container_name: cybershield-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/ssl:/etc/nginx/ssl
    networks:
      - cybershield-network
    depends_on:
      - cybershield-app
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  cybershield-network:
    driver: bridge